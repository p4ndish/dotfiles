#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

# Variables
user="TestUser"                # Replace with your desired system username
DB_NAME="my_database"          # Replace with your desired database name
DB_USER="my_user"              # Replace with your desired MySQL username
DB_PASSWORD="secure_password"  # Replace with your desired MySQL password

# Function to display messages
function info {
    echo -e "\e[34m[INFO]\e[0m $1"
}

# Update package lists
info "Updating package lists..."
sudo apt update -y

# Install prerequisites
info "Installing prerequisites..."
sudo apt install -y software-properties-common ca-certificates lsb-release apt-transport-https curl git unzip

# Add Ondřej Surý's PPA for PHP
info "Adding Ondřej Surý's PPA for PHP..."
sudo add-apt-repository -y ppa:ondrej/php

# Update package lists after adding new PPA
info "Updating package lists after adding PPA..."
sudo apt update -y

# Install PHP 8.3 and common extensions
info "Installing PHP 8.3 and common extensions..."
sudo apt install -y php8.3 php8.3-cli php8.3-fpm php8.3-mysql php8.3-xml php8.3-mbstring php8.3-curl php8.3-zip php8.3-bcmath php8.3-pdo php8.3-pgsql php8.3-sqlite3

# Verify PHP installation
info "Verifying PHP installation..."
php8.3 -v

# Install Node.js (latest stable version) using nvm
info "Installing Node.js..."
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
# in lieu of restarting the shell
\. "$HOME/.nvm/nvm.sh"
# Download and install Node.js:
nvm install 22
# Verify Node.js and npm installation
info "Verifying Node.js and npm installation..."
node -v
npm -v

# Install Composer
info "Installing Composer..."
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'.PHP_EOL; } else { echo 'Installer corrupt'.PHP_EOL; unlink('composer-setup.php'); exit(1); }"
php composer-setup.php --install-dir=/usr/local/bin --filename=composer
php -r "unlink('composer-setup.php');"

# Verify Composer installation
info "Verifying Composer installation..."
composer --version

# Install MySQL Server
info "Installing MySQL Server..."
sudo apt install -y mysql-server

# Secure MySQL installation
# info "Securing MySQL installation..."
# sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${DB_PASSWORD}';"
# sudo mysql -e "DELETE FROM mysql.user WHERE User='';"
# sudo mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
# sudo mysql -e "DROP DATABASE IF EXISTS test;"
# sudo mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
# sudo mysql -e "FLUSH PRIVILEGES;"

# Create MySQL database and user
# info "Creating MySQL database and user..."
# sudo mysql -e "CREATE DATABASE ${DB_NAME};"
# sudo mysql -e "CREATE USER '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASSWORD}';"
# sudo mysql -e "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';"
# sudo mysql -e "FLUSH PRIVILEGES;"

# Create a system user
# info "Creating system user ${user}..."
# sudo adduser --disabled-password --gecos "" ${user}

# Install Laravel globally for the user
info "Installing Laravel globally for ${user}..."
sudo -u ${user} composer global require laravel/installer

# Add Composer's global bin directory to the user's PATH
echo 'export PATH="$HOME/.config/composer/vendor/bin:$PATH"' | sudo tee -a /home/${user}/.bashrc
source /home/${user}/.bashrc

# Display installation summary
info "Installation complete!"
echo "----------------------"
echo "PHP 8.3, Node.js, MySQL, Composer, and Git have been installed."
echo "System User: ${user}"
echo "Database Name: ${DB_NAME}"
echo "MySQL Username: ${DB_USER}"
echo "MySQL Password: ${DB_PASSWORD}"
echo "----------------------"
echo "You can now connect to the database using the credentials above."
echo "Laravel has been installed globally for ${user}."
